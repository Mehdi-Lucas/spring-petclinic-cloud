name: Maven Build and Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3.13.0
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven

  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3.13.0
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven

  #   - name: Run Tests with Maven
    
  #     run: mvn test --file pom.xml
      
  build-and-push:
    # needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Set up JDK 11
      uses: actions/setup-java@v3.13.0
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Set up Docker Repository Prefix
      run: echo "REPOSITORY_PREFIX=${{ secrets.DOCKERHUB_ID }}" >> $GITHUB_ENV
    
    # - name: Build and Push Docker Images
    #   run: mvn spring-boot:build-image -Pk8s -DREPOSITORY_PREFIX=${{ secrets.DOCKERHUB_ID }} && ./scripts/pushImages.sh
    
    - name: SSH into machine
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        ssh-known-hosts: ${{ secrets.SSH_HOST }}
        ssh-strict: true
        
    - name: Configure Kubernetes CLI
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }}  'rm -rf $HOME/.kube
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config' 
        
    - name: Create secret
      run: | 
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} 'kubectl delete secret wavefront -n spring-petclinic || true &&
        kubectl create secret generic wavefront -n spring-petclinic --from-literal=wavefront-url=https://wavefront.surf --from-literal=wavefront-api-token=2e41f7cf-1111-2222-3333-7397a56113c'
    
    - name: Apply Kubernetes init-services
      run: |
        scp -o StrictHostKeyChecking=no -r k8s/init-services ubuntu@${{ secrets.SSH_HOST }}:/tmp/init-services
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} 'kubectl apply -f /tmp/init-services'
        
    - name: Install database helm charts
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} 'helm repo add bitnami https://charts.bitnami.com/bitnami && \
                                          helm repo update && \
                                          helm upgrade --install vets-db-mysql bitnami/mysql \
                                            --namespace spring-petclinic \
                                            --version 9.1.4 \
                                            --set auth.database=service_instance_db && \
                                          helm upgrade --install visits-db-mysql bitnami/mysql \
                                            --namespace spring-petclinic \
                                            --version 9.1.4 \
                                            --set auth.database=service_instance_db && \
                                          helm upgrade --install customers-db-mysql bitnami/mysql \
                                            --namespace spring-petclinic \
                                            --version 9.1.4 \
                                            --set auth.database=service_instance_db
                                            '
    - name: Apply Kubernetes deployements
      run: |
        scp -o StrictHostKeyChecking=no -r k8s/*.yaml ubuntu@${{ secrets.SSH_HOST }}:/tmp/k8s
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} 'cat /tmp/k8s/*.yaml | \
            sed "s#\${REPOSITORY_PREFIX}#${{ secrets.DOCKERHUB_ID }}#g" | \
            kubectl apply -f -'

        
